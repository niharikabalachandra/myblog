{
  "hash": "0ccbcb0224566c380a8d2c59b9e50e81",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Image Recognition Engine with and GenAI Explanation\nauthor: Niharika Balachandra\ndate: '2024-02-03'\ncategories:\n  - code\n  - analysis\n  - deploy\nimage: image.jpg\ndraft: true\nformat:\n  html:\n    code-fold: true\n---\n\n# The Deployed App\n<iframe\n\tsrc=\"https://niharikabalachandra-find-and-explain-flowers-streamlit.hf.space\"\n\tframeborder=\"0\"\n\twidth=\"850\"\n\theight=\"450\"\n></iframe>\n\n# Introduction\n\n## Architechture: Unpacking the App\n\n# Image Recognition\n\n## Model Tuning \n## Deploying on Hugging Face \n\n# GenAI Explanation\n## Deploying Quantized LLM on Hugging Face\n\n\nFor a demonstration of a line plot on a polar axis, see @fig-polar.\n\n::: {#cell-fig-polar .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![A line plot on a polar axis](index_files/figure-html/fig-polar-output-1.png){#fig-polar width=450 height=439}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}